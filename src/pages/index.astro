---
import Layout from '../layouts/Layout.astro';
import RuleForm from '../components/RuleForm.astro';
import RuleModal from '../components/RuleModal.astro';
import { loadConfiguration } from '../scripts/config-loader';
import { API_ENDPOINTS } from '../scripts/config-variables';

let config;
try {
  config = await loadConfiguration(API_ENDPOINTS.CONFIG);
} catch (error) {
  console.error('Error loading configuration:', error);
  config = { rules: [] };
}
const rules = config.rules || [];
---

<Layout title="Rate Limit Configuration">
  <main class="container mx-auto px-4 py-8">
    <h1 class="text-3xl font-bold mb-8 text-center">Rate Limit Configuration</h1>

    <div id="ruleModals" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 mb-8">
      {rules.map((rule, index) => (
        <RuleModal rule={rule} index={index} />
      ))}
    </div>

    <button id="addNewRule" class="mb-4 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
      Add New Rule
    </button>

    <div id="rulesContainer" class="space-y-4">
      {rules.map((rule, index) => (
        <RuleForm rule={rule} index={index} />
      ))}
    </div>

    <div id="newRuleContainer" class="hidden space-y-4">
      <RuleForm index={rules.length} />
    </div>

    <div class="mt-6 flex justify-end space-x-4">
      <button id="cancelEdit" class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
        Cancel
      </button>
      <button id="saveConfig" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
        Save Configuration
      </button>
    </div>

    <div id="message" class="mt-4 text-center font-bold"></div>
  </main>
</Layout>

<script define:vars={{ initialRules: rules }}>
  // Initialize currentRules with the server-side loaded data
  window.currentRules = initialRules;
</script>

<script>
  import { initializeUI } from '../scripts/ui-initializer';
  import '../scripts/config-ui';

  document.addEventListener('DOMContentLoaded', () => {
    initializeUI();

    const addNewRuleButton = document.getElementById('addNewRule');
    const rulesContainer = document.getElementById('rulesContainer');
    const newRuleContainer = document.getElementById('newRuleContainer');

    addNewRuleButton.addEventListener('click', () => {
      rulesContainer.classList.add('hidden');
      newRuleContainer.classList.remove('hidden');
      addNewRuleButton.classList.add('hidden');
    });

    document.getElementById('cancelEdit').addEventListener('click', () => {
      rulesContainer.classList.remove('hidden');
      newRuleContainer.classList.add('hidden');
      addNewRuleButton.classList.remove('hidden');
    });
  });
</script>
